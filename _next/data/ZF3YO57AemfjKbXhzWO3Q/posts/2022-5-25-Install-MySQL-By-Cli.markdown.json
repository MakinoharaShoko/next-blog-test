{"pageProps":{"post":"---\r\nlayout:     post\r\ntitle:      MySQL installation by CLI\r\nintro:   \"\"\r\ndate:       2022-5-25 23:30:00\r\nauthor:     \"Mahiru\"\r\ncatalog: true\r\ntags:\r\n    - 工程开发\r\n---\r\n\r\n## 命令行安装 MySQL\r\n\r\n### 配置环境变量\r\n\r\n#### 新建变量\r\n\r\n```\r\n变量名：MYSQL_HOME\r\n\r\n值：安装路径\r\n```\r\n\r\n#### 添加PATH路径\r\n\r\n```\r\n%MYSQL_HOME%\\bin\r\n```\r\n\r\n### 安装MySQL\r\n\r\n#### 初始化并记录初始化密码\r\n\r\n```shell\r\nmysqld --initialize --console\r\n```\r\n\r\n#### 将MySQL安装为Windows的服务\r\n\r\n```shell\r\nmysqld -install\r\n```\r\n\r\n#### 启动MySQL\r\n\r\n```shell\r\nnet start MySQL\r\n```\r\n\r\n#### 登陆数据库，并输入前面记录的临时密码\r\n\r\n```shell\r\nmysql -u root -p\r\n```\r\n\r\n#### 修改自己的密码：123456  ,命令一定要包括分号\r\n\r\n```mysql\r\nalter user 'root'@'localhost' identified by '123456';\r\nalter user 'root'@'localhost' identified with mysql_native_password by '123456';  \r\n```\r\n\r\n#### 最后提交 \r\n\r\n```mysql\r\ncommit;\r\n```\r\n\r\n## 补充：删除MySQL\r\n\r\n```shell\r\nnet stop mysql\r\nmysqld -remove\r\n```\r\n\r\n## 补充：连接MySQL\r\n\r\n### SpringBoot\r\n\r\n```properties\r\n#MYSQL链接\r\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\r\nspring.datasource.url=jdbc:mysql://localhost:3306[(可选)/database]?serverTimezone=UTC\r\nspring.datasource.username=root\r\nspring.datasource.password=123456\r\n```\r\n\r\n### NestJS\r\n\r\n#### 引入包\r\n\r\n```\r\nyarn add @nestjs/typeorm typeorm mysql2\r\n```\r\n\r\n#### 导入到`app.module.ts`\r\n\r\n```typescript\r\nimport { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\n\r\n@Module({\r\n  imports: [\r\n    TypeOrmModule.forRoot({\r\n      type: 'mysql',\r\n      host: 'localhost',\r\n      port: 3306,\r\n      username: 'root',\r\n      password: 'root',\r\n      database: 'test',\r\n      entities: [],\r\n      synchronize: true,\r\n    }),\r\n  ],\r\n})\r\nexport class AppModule {}\r\n\r\n```\r\n\r\n另外，我们可以创建 `ormconfig.json` ，而不是将配置对象传递给 `forRoot()`。\r\n\r\n```bash\r\n{\r\n  \"type\": \"mysql\",\r\n  \"host\": \"localhost\",\r\n  \"port\": 3306,\r\n  \"username\": \"root\",\r\n  \"password\": \"root\",\r\n  \"database\": \"test\",\r\n  \"entities\": [\"dist/**/*.entity{.ts,.js}\"],\r\n  \"synchronize\": true\r\n}\r\n```\r\n\r\n然后，我们可以不带任何选项地调用 `forRoot()` :\r\n\r\n> app.module.ts\r\n\r\n```typescript\r\nimport { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\n\r\n@Module({\r\n  imports: [TypeOrmModule.forRoot()],\r\n})\r\nexport class AppModule {}\r\n```\r\n"},"__N_SSG":true}