{"pageProps":{"post":"---\r\nlayout:     post\r\ntitle:      Webpack 搭建 React + TS 环境\r\nintro:   \"\"\r\ndate:       2022-5-29 18:30:00\r\nauthor:     \"Mahiru\"\r\ncatalog: true\r\ntags:\r\n    - 工程开发\r\n---\r\n\r\n# Webpack 基础配置\r\n\r\n## 初始化，安装依赖\r\n最终得到：\r\n`package.json`\r\n```json\r\n{\r\n  \"name\": \"webpack\",\r\n  \"version\": \"1.0.0\",\r\n  \"main\": \"src/main.tsx\",\r\n  \"license\": \"MIT\",\r\n  \"scripts\": {\r\n    \"build\": \"webpack --config webpack.prod.js\",\r\n    \"dev\": \"webpack serve --open --config webpack.dev.js\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel/core\": \"^7.18.2\",\r\n    \"@babel/preset-env\": \"^7.18.2\",\r\n    \"babel-loader\": \"^8.2.5\",\r\n    \"clean-webpack-plugin\": \"^4.0.0\",\r\n    \"css-loader\": \"^6.7.1\",\r\n    \"html-webpack-plugin\": \"^5.5.0\",\r\n    \"mini-css-extract-plugin\": \"^2.6.0\",\r\n    \"ts-loader\": \"^9.3.0\",\r\n    \"typescript\": \"^4.7.2\",\r\n    \"webpack\": \"^5.72.1\",\r\n    \"webpack-cli\": \"^4.9.2\",\r\n    \"webpack-dev-server\": \"^4.9.0\",\r\n    \"webpack-merge\": \"^5.8.0\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@types/react\": \"^18.0.9\",\r\n    \"@types/react-dom\": \"^18.0.5\",\r\n    \"react\": \"^18.1.0\",\r\n    \"react-dom\": \"^18.1.0\"\r\n  }\r\n}\r\n```\r\n\r\n## 编写 `webpack.common.js` 作为主要配置文件\r\n```js\r\nconst path = require('path');\r\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\r\nconst {CleanWebpackPlugin} = require(\"clean-webpack-plugin\");\r\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\r\n\r\n// 生成随机字符串，用于区分打包产物\r\nconst bundle_random_str = Math.random().toString(36).slice(-6);\r\n\r\nmodule.exports = {\r\n    // 入口\r\n    entry: {\r\n        index: './src/main.tsx'\r\n    },\r\n    // 出口\r\n    output: {\r\n        path: path.resolve(__dirname, './dist'),\r\n        filename: `assets/[name].${bundle_random_str}.bundle.js`,\r\n    },\r\n    // 对于各个模块的规则\r\n    module: {\r\n        rules: [\r\n            // JavaScript\r\n            {\r\n                test: /\\.m?js$/,\r\n                exclude: /node_modules/,\r\n                use: {\r\n                    loader: 'babel-loader',\r\n                    options: {\r\n                        presets: ['@babel/preset-env'],\r\n                    },\r\n                },\r\n            },\r\n            // css\r\n            {\r\n                test: /\\.css$/,\r\n                use: [MiniCssExtractPlugin.loader, 'css-loader']\r\n            },\r\n            // ts\r\n            {\r\n                test: /\\.tsx?$/,\r\n                use: 'ts-loader',\r\n                exclude: /node_modules/,\r\n            },\r\n        ]\r\n    },\r\n    plugins: [\r\n        // 打包前清理\r\n        new CleanWebpackPlugin(),\r\n        // 打包时处理HTML\r\n        new HtmlWebpackPlugin({\r\n            title: 'Webpack Test',\r\n            template: path.resolve(__dirname, './public/index.html'),\r\n            filename: 'index.html',\r\n        }),\r\n        // 打包成css\r\n        new MiniCssExtractPlugin({\r\n            filename: `assets/style.${bundle_random_str}.css`\r\n        }),\r\n    ],\r\n    resolve: {\r\n        extensions: ['.js', '.jsx', '.ts', '.tsx']\r\n    }\r\n}\r\n```\r\n\r\n### 在index中引入 Webpack 变量的方法\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title><%= htmlWebpackPlugin.options.title %></title>\r\n</head>\r\n<body>\r\n<div id=\"root\"></div>\r\n</body>\r\n</html>\r\n\r\n```\r\n\r\n## 编写开发环境配置文件\r\n`webpack.dev.js`\r\n\r\n```js\r\nconst {merge} = require('webpack-merge');\r\nconst common = require('./webpack.common.js');\r\nconst path = require(\"path\");\r\n\r\nmodule.exports = merge(common, {\r\n    mode: 'development',\r\n    devtool: 'inline-source-map',\r\n    // 启用devServer\r\n    devServer: {\r\n        static: {\r\n            publicPath: path.join(__dirname, 'public')\r\n        },\r\n        hot: true,\r\n        compress: true,\r\n        port: 3000,\r\n    },\r\n});\r\n\r\n```\r\n\r\n## 编写生产环境配置文件\r\n`webpack.prod.js`\r\n```js\r\nconst {merge} = require('webpack-merge');\r\nconst common = require('./webpack.common.js');\r\n\r\nmodule.exports = merge(common, {\r\n    mode: 'production',\r\n});\r\n\r\n```\r\n\r\n# 配置 TS Babel\r\n\r\n## 配置TS\r\n`tsconfig.json`\r\n```json\r\n{\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"./dist/\",\r\n    // \"rootDir\": \"./src\",\r\n    \"sourceMap\": true, // 开启sourcemap\r\n    \"module\": \"commonjs\",\r\n    \"target\": \"es5\",\r\n    \"jsx\": \"react\",\r\n    \"esModuleInterop\": true,\r\n    \"allowJs\": false,\r\n    \"strict\": true\r\n  }\r\n}\r\n\r\n```\r\n\r\n## 配置 Babel\r\n`babel.config.json`\r\n```json\r\n{\r\n    \"presets\": [\"@babel/preset-env\"]\r\n}\r\n```"},"__N_SSG":true}