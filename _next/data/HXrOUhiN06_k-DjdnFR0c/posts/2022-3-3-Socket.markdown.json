{"pageProps":{"post":"---\r\nlayout:     post\r\ntitle:      WebSocket 与 Socket.io 总结\r\nintro:   \"\"\r\ndate:       2022-3-3 23:00:00\r\nauthor:     \"Makinohara\"\r\ncatalog: true\r\ntags:\r\n    - 工程开发\r\n---\r\n\r\n## WebSocket\r\n\r\nWebSocket 协议在2008年诞生，2011年成为国际标准。所有浏览器都已经支持了。\r\n\r\n它的最大特点就是，服务器可以主动向客户端推送信息，客户端也可以主动向服务器发送信息，是真正的双向平等对话，属于[服务器推送技术](https://en.wikipedia.org/wiki/Push_technology)的一种。\r\n\r\n（1）建立在 TCP 协议之上，服务器端的实现比较容易。\r\n\r\n（2）与 HTTP 协议有着良好的兼容性。默认端口也是80和443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器。\r\n\r\n（3）数据格式比较轻量，性能开销小，通信高效。\r\n\r\n（4）可以发送文本，也可以发送二进制数据。\r\n\r\n（5）没有同源限制，客户端可以与任意服务器通信。\r\n\r\n（6）协议标识符是`ws`（如果加密，则为`wss`），服务器网址就是 URL。\r\n\r\n# 使用 Socket.io\r\n\r\n## 服务端\r\n\r\n```js\r\nconst soc = socketIo(ser);\r\n\r\nsoc.on('connection',(socket)=>{\r\n    //监听connection（用户连接）事件，socket为用户连接的实例\r\n    socket.on('disconnect',()=>{\r\n     //监听用户断开事件\r\n        console.log(\"用户\"+socket.id+\"断开连接\");\r\n    });\r\n    console.log(\"用户\"+socket.id+\"连接\");\r\n    socket.on('msg',(data)=>{\r\n       //监听msg事件（这个是自定义的事件）\r\n        console.log(data);//你好服务器\r\n        socket.emit('msg','你好浏览器');\r\n        //向socket用户发送信息\r\n    })\r\n})\r\n```\r\n\r\n## 浏览器端\r\n\r\n```js\r\nconst soc = io('http://localhost:80');\r\n//向指定的服务器建立连接，地址可以省略\r\nsoc.emit('msg','你好服务器');\r\n//自定义msg事件，发送‘你好服务器’字符串向服务器\r\nsoc.on('msg',(data)=>{\r\n\t//监听浏览器通过msg事件发送的信息\r\n\tconsole.log(data);//你好浏览器\r\n});\r\n```\r\n\r\n"},"__N_SSG":true}