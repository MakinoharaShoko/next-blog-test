{"pageProps":{"post":"---\r\nlayout:     post\r\ntitle:      在 TS 中使用 Refs\r\nintro:   \"\"\r\ndate:       2022-5-10 17:30:00\r\nauthor:     \"Mahiru\"\r\ncatalog: true\r\ntags:\r\n    - 工程开发\r\n---\r\n\r\n## 为什么要使用 Refs\r\n\r\n当父组件想要获取子组件的实例或者父组件想要调取子组件的方法时，我们通常使用 Refs。\r\n\r\n## React 官方关于使用 Refs 时机的说明\r\n\r\n### 何时使用 Refs\r\n\r\n下面是几个适合使用 refs 的情况：\r\n\r\n- 管理焦点，文本选择或媒体播放。\r\n- 触发强制动画。\r\n- 集成第三方 DOM 库。\r\n\r\n避免使用 refs 来做任何可以通过声明式实现来完成的事情。\r\n\r\n举个例子，避免在 `Dialog` 组件里暴露 `open()` 和 `close()` 方法，最好传递 `isOpen` 属性。\r\n\r\n### 勿过度使用 Refs\r\n\r\n你可能首先会想到使用 refs 在你的 app 中“让事情发生”。如果是这种情况，请花一点时间，认真再考虑一下 state 属性应该被安排在哪个组件层中。通常你会想明白，让更高的组件层级拥有这个 state，是更恰当的。查看 [状态提升](https://zh-hans.reactjs.org/docs/lifting-state-up.html) 以获取更多有关示例。\r\n\r\n## 在 TypeScript 中使用 Refs\r\n\r\n### 子组件如何传递 Refs\r\n\r\n```tsx\r\nimport {forwardRef, ReactNode, useImperativeHandle, useRef, useState} from \"react\";\r\n\r\n// 传递的 Refs 的类型声明\r\nexport type TestRefRef = {\r\n  increment: () => void;\r\n};\r\n\r\n// 子组件的传入参数\r\ntype TestRefProps = {\r\n  children?: ReactNode | null;\r\n};\r\n\r\n// 使用 forwardRef 来进行 Ref 转发\r\nexport const TestRef = forwardRef<TestRefRef, TestRefProps>(\r\n  (props, ref) => {\r\n    const [count, setCount] = useState(0);\r\n    // increment 是一个我们希望暴露出去的子组件函数，可以被父组件调用\r\n    const increment = () => setCount(count + 1);\r\n    // useImperativeHandle 可以让你在使用 ref 时自定义暴露给父组件的实例值\r\n    useImperativeHandle(ref, () => ({\r\n      // 将 increment 暴露出去\r\n      increment\r\n    }));\r\n    return (<div>Test Ref：{count}</div>);\r\n  }\r\n);\r\n\r\n```\r\n\r\n### 父组件如何获得 Refs\r\n\r\n```tsx\r\nimport './App.css'\r\nimport {TestRef, TestRefRef} from \"./components/testRef\";\r\nimport React from 'react';\r\n\r\nfunction App() {\r\n  // 在获取 ref 时，我们需要标注 ref 的类型（使用泛型），初始化值为 null。\r\n  const ref = React.useRef<TestRefRef>(null);\r\n  const logRef = () => {\r\n    // 通过 ref.current 访问实例。\r\n    console.log(ref.current); // {increment: ƒ}\r\n    // 调用一个实例函数\r\n    ref.current!.increment(); // 使用 ! 是一个断言，用于在 TS 中假定该属性存在。\r\n  }\r\n  return (\r\n      <div className=\"App\">\r\n        {/* 获取子组件的 ref */}\r\n        <TestRef ref={ref}/>\r\n        <button onClick={logRef}>Log Ref and increase</button>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n```\r\n\r\n"},"__N_SSG":true}